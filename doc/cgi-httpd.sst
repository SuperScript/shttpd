<html>
<head>\title{shttpd}</head>
<body>
\crumbs
\h1{The \tt{cgi-httpd} program}

\h2{Interface}
<pre>
  cgi-httpd \it{prog}
</pre>
where \ti{prog} is one or more arguments specifying a program to run
for each valid request.

\tt{cgi-httpd} reads an HTTP request message from standard input,
and treats the URI path as the name of a CGI script.  The script is
expected to print its reply to standard output.

Before reading any input, \tt{cgi-httpd} changes the working directory to that
named in the \tt{$ROOT} environment variable, performs \tt{chroot} to the
current directory, and then sets its group id and user id to the numeric values
given in the environment variables \tt{$GID} and \tt{$UID}, typically set
with \a{http://cr.yp.to/daemontools/envdir.html}{\tt{envdir}}.  Before
executing \ti{prog}, \tt{cgi-httpd} sets the execution path to \tt{/bin}.
If it cannot carry out these operations, \tt{cgi-httpd} complains to standard
output and exits 111.

If it encounters an error in processing a request, \tt{cgi-httpd}
exits 21.  Otherwise, it returns the exit code of \ti{prog}.

For a request specifying the hostname \ti{H}, \tt{cgi-httpd}
changes its working directory to \tt{./host/\ti{H}} after replacing
\tt{/.}  with \tt{/:} and \tt{//} with \tt{/} in
\tt{./host/\ti{H}}.  When a valid request lacks a host name,
\tt{cgi-httpd} uses \tt{0} as the host name.  After changing the
working directory, \tt{cgi-httpd} sets the cgi environment variables
and executes \ti{prog}.

\tt{cgi-httpd} accepts HTTP/0.9, HTTP/1.0, and HTTP/1.1 requests.  It
supports HEAD, GET, and POST, and rejects all other methods.

\tt{cgi-httpd} manipulates the following environment variables:

\tt{$AUTH_TYPE} is unset.

\tt{$CONTENT_LENGTH} is the content length of the request, if
applicable, or unset.

\tt{$CONTENT_TYPE} is the content type of the request, if
applicable, or unset.

\tt{$GATEWAY_INTERFACE} is the string \tt{CGI/1.1}

\tt{$PATH_INFO} is the path portion of the request URI, after URL
decoding.

\tt{$PATH_TRANSLATED} is unset.

\tt{$QUERY_STRING} is the query string portion of the request URI.

\tt{$REMOTE_ADDR} is set to the value of the environment variable \tt{$TCPREMOTEIP}.

\tt{$REMOTE_HOST} is set to the value of the environment variable \tt{$TCPREMOTEHOST}.

\tt{$REMOTE_USER} is set to the value of the environment variable \tt{$TCPREMOTEINFO}.

\tt{$REQUEST_METHOD} is set to the method of the request URI.

\tt{$SCRIPT_NAME} is the empty string.

\tt{$SERVER_NAME} is the name of the host given in the request, if
applicable, and 0 otherwise.

\tt{$SERVER_PORT} is the value of the environment variable \tt{$TCPLOCALPORT}.

\tt{$SERVER_PROTOCOL} is one of the strings \tt{HTTP/0.9},
\tt{HTTP/1.0}, or \tt{HTTP/1.1}.

\tt{$SERVER_SOFTWARE} is the string \tt{cgi-httpd}.


\h2{Examples}
The \tt{cgi-example} program running under \tt{cgi-httpd} provides
an example of a single-address, single-form cgi server.  These
instructions assume that the user accounts \tt{shttp} and
\tt{shttplog} exist, and that shttpd was installed in
/usr/local/shttpd.

Create a directory to house shttpd service directories, for example:
<pre>
  mkdir /usr/local/shttpd/service
</pre>

Configure a \tt{cgi-example} server to listen on a port of your choice:
<pre>
  cgi-config shttp shttplog /usr/local/shttpd/service/cgi-example \it{port} cgi-example
</pre>

Copy \tt{cgi-example} to
\tt{/usr/local/shttpd/service/cgi-example/root/bin}.

Download and compile the \a{../miscellanea/intro.html}{miscellanea}
package.  Copy the executables \tt{foldlines}, \tt{revline},
\tt{rot13}, and \tt{wrapcr} to
\tt{/usr/local/shttpd/service/cgi-example/root/bin}.

For each \ti{hostname} you wish accept in requests, create the
directory
\tt{/usr/local/shttpd/service/cgi-example/root/host/\it{hostname}}.

Finally, start the service under \tt{svscan}:
<pre>
  ln -s /usr/local/shttpd/service/cgi-example /service
</pre>

You can test the cgi-example server
\a{http://www.superscript.com:30000}{here}.

Documentation for the programs used by the example server is
\a{../miscellanea/intro.html}{here}.
</body></html>
