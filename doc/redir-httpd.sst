<html>
<head>\title{shttpd}</head>
<body>
\crumbs
\h1{The \tt{redir-httpd} program}

\h2{Interface}
<pre>
  redir-httpd
</pre>

\tt{redir-httpd} reads an HTTP request message from standard input,
looks up the URI in a cdb-format database, and prints a redirection
command or error message to standard output.

Before reading any input, \tt{redir-httpd} changes the working
directory to that named in the \tt{$ROOT} environment variable,
performs \tt{chroot} to the current directory, and then sets its
group id and user id to the numeric values given in the environment
variables \tt{$GID} and \tt{$UID}, typically set with
\a{http://cr.yp.to/daemontools/envdir.html}{\tt{envdir}}.
If it cannot carry out these operations, \tt{redir-httpd} complains
to standard error and exits 111.

If it encounters an error in processing a request, \tt{redir-httpd}
exits 21.  Otherwise, it exits 0.

The \tt{redir-httpd} program accepts HTTP/0.9, HTTP/1.0, and HTTP/1.1 requests.
For a request with the host name \ti{host}, \tt{redir-httpd} replaces
\tt{/.} with \tt{/:} and \tt{//} with \tt{/} in \tt{./\ti{host}}, and
looks for redirection commands in the file \tt{./\ti{host}/data.cdb}, created
by \a{redir-data.html}{\tt{redir-data}}.  For a valid request lacking a host
name, \tt{redir-httpd} uses \tt{0} as the host name.

\h2{Request path parsing}

\tt{redir-httpd} replaces \tt{/.} with \tt{/:} and \tt{//} with \tt{/} in
the request path before looking for a match.

Starting immediately to the left of any query string in the request path,
and moving from right to left,
\tt{redir-httpd}
splits the request path at each \tt{/} character to obtain
\tt{\ti{head}/\ti{tail}},
and and attempts a cdb lookup using
\tt{\ti{head}/}
as the key.
Upon sucess,
\tt{redir-httpd}
replaces
\tt{\ti{head}/}
with the lookup result, appends
\ti{tail},
and redirects the client to the resultant URL.
When
\tt{redir-httpd}
receives a request with an empty path, it uses
\tt{/}
instead.
If the full request path (sans query string) ends with a
character other than
\tt{/},
then
\tt{redir-httpd}
first attempts a lookup using the full request path as the key.

\h2{Logging}

When it processes a request without error, \tt{redir-httpd} prints to
standard error a line with the form
<pre>
  \it{host ref match key value}
</pre>
The string \ti{host} is the request host name.
The string \ti{ref} is the value of the first \tt{Referer:} header,
  or \tt{0} if there is no such header.
The string \ti{match} is \tt{unknown} if no match is found,
  \tt{partial} for a partial path match,
  or \tt{exact} for an exact path match.
The string \ti{key} is the portion of the request path that matched a
  redirection command,
  or the full request path when \ti{match} is \tt{unknown}.
The string \ti{value} is the replacement for \ti{key} in the relevant
  redirection command,
  or the empty string when \ti{match} is \tt{unknown}.

Within each component of the log line, \tt{redir-httpd} replaces control
characters with '\tt{?}' and spaces with '\tt{_}'.  If a component exceeds 100
characters in length, \tt{redir-httpd} truncates it to 100 characters and
appends ellipses.

\h2{Redirection examples}
Commands specifying the following substitutions
<pre>
  /shttpd  --> http://www.superscript.com/shttpd/intro.html
  /shttpd/ --> http://www.superscript.com/shttpd/
</pre>
result in the following redirections:
<pre>
  /shttpd --> http://www.superscript.com/shttpd/intro.html
  /shttpd/cgi-httpd.html --> http://www.superscript.com/shttpd/cgi-httpd.html
</pre>

</body></html>
